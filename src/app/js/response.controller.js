'use strict';

angular.module('responymous')
  .controller('ResponseCtrl', function( CONFIG) {
    var ref = new Firebase(CONFIG.Firebase.baseUrl);
    var self = this;

    this.poll = {
      "votes":[ 5,5,4,3,4,2,3,3,3,3,5,1,1 ],
      "datetime":"2014-12-03T20:27:48.744Z",
      "class":{
        "name":"FEE",
        "semester":"Fall 2014",
        "instructor":"David Rogers",
        "school":"TIY",
        "location":"Orando"
      }
    }

    this.calcVotes = function(votes){
      //var date = new Date();
      //console.log(JSON.stringify(date));
      var count = { red:0, yellow:0, green:0 };
      votes.forEach(function(element, index, array){
          if (element <= 2){
            count.red = count.red + 1;
          }
          if (element == 3) count.yellow = count.yellow + 1;
          if (element >= 4){
            count.green = count.green + 1;
          }
      });

      var response = [
        { count: count.red,
          percent: ((count.red/votes.length)*100).toFixed(2) },
        { count: count.yellow,
          percent: ((count.yellow/votes.length)*100).toFixed(2) },
        { count: count.green,
          percent: ((count.green/votes.length)*100).toFixed(2) }
      ]


      this.red = response[0].percent;
      this.yellow = response[1].percent;
      this.green = response[2].percent;
      //console throws 2 instances, why?
      //console.log(response);
    }

    self.calcVotes(self.poll.votes);

    this.addVote=function(selection){

      var currDate = (new Date()).toISOString().slice(0,10).replace(/-/g,"");
      var userVoteRef = ref.child("Votes");
      userVoteRef.push({
        class_id: "Q42014FEEORL",
        timestamp: Firebase.ServerValue.TIMESTAMP,
        date: currDate,
        score: selection,
        student_id: "user1"
      });

      // Get the unique ID generated by push()
      var voteID = userVoteRef.key();
      console.log(voteID);

      /*var upvotesRef = new Firebase('https://docs-examples.firebaseio.com/android/saving-data/fireblog/posts/-JRHTHaIs-jNPLXOQivY/upvotes');
      upvotesRef.transaction(function (current_value) {
        return (current_value || 0) + 1;
      });*/

      userVoteRef.on("value", function(snap) {
        console.log(snap.val());
      }, function (errorObject) {
        console.log("The read failed: " + errorObject.code);
      });

      userVoteRef
      .startAt("user1")
      .endAt("user1")
      .once("value", function(snap) {
        console.log(snap.val());
      });

      /*var userVoteRef = ref.child("DailyVote");
      userVoteRef.push({
        student_id: "user1",
        date: currDate,
        last_vote: selection
      });*/


      /*var voteCountRef = ref.child("Classes/Q42014FEEORL/vote_totals/5");

      voteCountRef.on("value", function(snapshot) {
        console.log(snapshot.val());
      }, function (errorObject) {
        console.log("The read failed: " + errorObject.code);
      });*/


    }
  })
;
